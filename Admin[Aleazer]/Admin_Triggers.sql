--3 TRIGGER TO UPDATE PARKING SPACE STATUS ---------
CREATE OR REPLACE FUNCTION CHECK_IN_SPACE()
RETURNS TRIGGER
AS $$
DECLARE
    SID INTEGER;--SPACE_ID
    PID INTEGER;--USER_PARKING_ID
BEGIN
    SELECT PS.SPACE_ID INTO SID
    FROM parking_schema.PARKING_SENSOR_READING PSR
    JOIN parking_schema.PARKING_SENSOR PS ON PS.SENSOR_ID = PSR.SENSOR_ID
    WHERE NEW.SENSOR_ID = PS.SENSOR_ID;
	
	SELECT PARKING_ID INTO PID
        FROM parking_schema.USER_PARKING_HISTORY UPH
        WHERE CHECK_IN IS NULL AND CHECK_OUT IS NULL AND SPACE_ID = SID;

    IF PID IS NOT NULL THEN
        -- UPDATE PARKING SPACE STATUS
		    UPDATE parking_schema.PARKING_SPACE SET STATUS = 'OCCUPIED' WHERE SPACE_ID = SID;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

DROP TRIGGER IF EXISTS CHECK_IN ON parking_schema.PARKING_SENSOR_READING;
CREATE TRIGGER CHECK_IN
AFTER INSERT ON parking_schema.PARKING_SENSOR_READING
FOR EACH ROW
WHEN (NEW.READING =1) 
EXECUTE FUNCTION CHECK_IN_SPACE();

--4 TRIGGER FOR CHECK-OUT OF VEHICLES(can implement at api level) ---------
CREATE OR REPLACE FUNCTION CHECK_OUT_SPACE()
RETURNS TRIGGER
AS $$
DECLARE
SID INTEGER -- assigned spaceId;
PID INTEGER -- user parking id;
BEGIN
    SELECT SPACE_ID INTO SID FROM
			  parking_schema.PARKING_SENSOR
			  WHERE SENSOR_ID = NEW.SENSOR_ID;
			  
	SELECT PARKING_ID INTO PID 
			  FROM parking_schema.USER_PARKING_HISTORY UPH
			  WHERE CHECK_IN IS NOT NULL AND CHECK_OUT IS NULL AND SPACE_ID= SID;
			  
	IF SID IS NOT NULL AND PID IS NOT NULL THEN
	         -- update user check out time
			  UPDATE parking_schema.USER_PARKING_HISTORY SET CHECK_OUT = CURRENT_TIMESTAMP WHERE PARKING_ID=PID AND SPACE_ID=SID;
			 -- UPDATE PARKING SPACE STATUS
		    UPDATE parking_schema.PARKING_SPACE SET STATUS = 'AVAILABLE' WHERE SPACE_ID = SID; 

	END IF;
RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

DROP TRIGGER IF EXISTS CHECK_OUT ON parking_schema.PARKING_SENSOR_READING;
CREATE TRIGGER CHECK_OUT
AFTER INSERT ON parking_schema.PARKING_SENSOR_READING
FOR EACH ROW
WHEN (NEW.READING = 0) 
EXECUTE FUNCTION CHECK_OUT_SPACE();